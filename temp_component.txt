            <FormField
              control={form.control}
              name="area_id"
              render={({ field }) => {
                console.log('FIELD VALUE:', field.value);
                console.log('FIELD VALUE TYPE:', typeof field.value, Array.isArray(field.value));
                if (Array.isArray(field.value)) {
                  field.value.forEach(val => console.log('VALUE ITEM:', val, typeof val));
                }
                
                // Asegurarnos de que field.value sea siempre un array de strings
                const safeValues = Array.isArray(field.value) 
                  ? field.value.map(String) 
                  : field.value 
                    ? [String(field.value)] 
                    : [];
                
                console.log('SAFE VALUES:', safeValues);
                    
                // Procesar opciones para asegurar que sean strings
                const options = filteredAreas?.map((area) => ({
                  label: area.nombre,
                  value: String(area.id) // Asegurar que el valor sea string
                })) || [];
                
                console.log('OPTIONS:', options);
                
                return (
                <FormItem>
                  <FormLabel>Area</FormLabel>
                  <MultiSelectCombobox
                    options={options}
                    placeholder="Elegir areas"
                    emptyMessage="No se encontraron areas"
                    selectedValues={safeValues}
                    onChange={(values) => {
                      console.log('SELECTED VALUES:', values);
                      field.onChange(values);
                    }}
                    disabled={view}
                  />
                  <FormMessage />
                </FormItem>
              );
              }
            )}
            />
